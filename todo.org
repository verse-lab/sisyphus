* Limitations
** Invariants hidden in external lemmas
An example of such a case would be when we're dealing with a proof
style that first reifies an OCaml computation with a Gallina model,
and uses their equivalence as an invariant. Then once evaluating the
lemma, the proof calls out to an external lemma to reduce the proof.
* Tasks for the PROOF GOD
** DONE Refactor code with appropriate logging (logs)
CLOSED: [2022-10-05 Wed 10:20]
** DONE Update code to take in multiple coq-libs
CLOSED: [2022-10-05 Wed 11:52]
** TODO Conditionally send things to z3 if env SIS_Z3 is set
** TODO Work on adding more examples
** TODO Update codebase to work with Coq.8.16.0
** TODO You're the BEST around

* Tasks for the proof demigod
** DONE Add array of rev list
CLOSED: [2022-09-27 Tue 16:35]
*** Make it build
** DONE Add benchmark test for array_of_rev list
CLOSED: [2022-09-27 Tue 17:02]
** TODO How to handle HO loops?
*** Add xfor and xwhile [1 hr]
*** Look through examples and find minimal set of combinators that capture all recursion
*** Rewrite array_of_rev_list using HO iterator
*** Define & prove specification for for-loop iterator (nat_fold_left)
*** Prove new program
** TODO Add modular tests
